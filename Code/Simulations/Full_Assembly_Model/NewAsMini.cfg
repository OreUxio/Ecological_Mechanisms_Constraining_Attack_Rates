!target_S = 10
!target_nu = 0.5
!r = 1/10


!as_ratio = sqrt(2*log(target_S-1))
!Sr_guess = exp(as_ratio^2/2)*as_ratio

!sigma = sqrt(2*log(Sr_guess))/target_nu


!K = 1
!a0 = 1
!tau =1 
!epsilon = r


no_carnivores = true
no_plant_competition = true
niche_space_dimensions_D = 1 # essentially unused

Mmin = 10^(-5)
Mopt = Mmin
Mini = Mmin
typical_bodymass_ratio_d = 1

log10_bodymass_ratio_window_center = 0
small_prey_exponent_alpha = 0
big_prey_exponent_beta = 0

growth_rate_allometric_prefactor = 1/tau  #plants
production_over_respiration = -1
conversion_efficiency_epsilon = epsilon
respiration_rate_allometric_prefactor = r


use_aggressivity = 4
attack_rate_allometric_prefactor = 1
typical_aggressivity_ratio_da = 1.3^0.5
aggressivity_decay = 0.8^0.5
!aggressivity_prefactor = 0.11
initial_aggressivity = aggressivity_prefactor*exp(-as_ratio*sigma)*r/(K/tau*epsilon)


trophic_niche_width_w_t = target_nu
trophic_niche_width_spread = 0.0
typical_niche_width_ratio = 1
niche_width_decay = 1
speciate_selected_species = false

metabolic_rate_allometric_exponent = 0
attack_rate_allometric_exponent = 0
handling_time_allometric_exponent = 0
growth_rate_allometric_exponent = 0
max_growth_rate_allometric_exponent = 0
respiration_rate_allometric_exponent = 0

initial_number_of_individuals = 1
minimum_biomass_considered = Mmin
area_per_compartment = 1
dominating_species_primary_production = K/tau

totally_random_link_strength_sigma = sigma

# Change the followig parameters to access older versions of the code
# (Rossberg 2008 is not accessible anymore.  The libraries it used
# were discontinued.  Sorry.):
animal_physiology_version = 3
plant_physiology_version = 3
trait_space_model = 1 # no trade offs
big_plants_eaten = true
plant_shadowing = false
plant_hardening_time = false
invade_by_biomass = false

### The following controls niche (or trait) space and evolution in
### niche space

# These parameters are irrelevant when trait_space_model =  = 3.
flat_foraging_distribution = true
flat_vulnerability_distribution = true
flat_plant_distribution = true

plant_trait_variability = 1
# Width of plant competition kernel, i.e. the niche width:
plant_niche_width_w_r = 10^(-10)
plant_diffuse_competition = 0.2
plant_diffuse_competition_probability = 0*1/(plant_diffuse_competition)^2/Sr_guess
plant_diffuse_competition_symmetry=0

plant_competition_drop_off_exponent = 2

plant_vulnerability_variability = 1 #sqrt(D+2)
animal_vulnerability_variability = plant_vulnerability_variability
plant_vulnerability_separation = 0
plant_vulnerability_relative_weight = 1
foraging_variability_f0 = 4*plant_vulnerability_variability
mu_V_plant = 0.5
mu_V_animal = 0.01*mu_V_plant
mu_F = 1

# Set this to zero to disable switching and make simulations much
# faster (code not tested recently!):
do_switching = false

invade_from_other = false
plant_animal_ratio = 1
min_number_of_plants = 3
min_number_of_animals = 1
initial_number_of_plants = floor(10)
initial_number_of_animals = floor(10)
n_neutral = 0

addition_fraction = 0
max_steady_state_size = 5000
max_invasion_attempts = 2000
auto_extinguishing = true
multithreading_only_fit = 1

check_data_consistency = false

# Set to true to get high-resolution listing
do_listing_after_each_iteration = false

time_between_insertions = 10000/r
record_relaxation_dynamics = false

dumb_preconditioner = false
log_small_value_tolerance = log(10000.0)

time_between_saving = 100*time_between_insertions 
plant_richness_saturation_criterion = 10

# Stop simulation after this time (alternatively, stop manually by
# sending a HUP or TERM signal).
observation_time = 7000000000000000000000000000000000000000000000000000000000000000000000000000*time_between_saving
# Making the following a small multiple of
# time_between_insertions might(!) save computer memory.
time_between_re_initialize = 2*observation_time 
# Triggers a small community analysis at intervals:
time_between_analysis = time_between_insertions

# Set this to "random" if you want to seed the random number generator
# by system time, or otherwise set it to your lucky number.
random_seed = random

matrix_accuracy = 1e-4 # matches DEFAULT_ABSOLUTE_TOLERANCE below
vector_accuracy = 1e-5 # a save guess
matrix_truncation_epsilon = 1     * 1e-5
vector_truncation_epsilon = 1e-4  * 1e-5

# Parameter of ODE solver.  The solver operates on logarithmic
# biomasses.  Therefore, what is "absolute tolerance" here, is
# "relative tolerance" in terms of biomasses. 
MAX_STEP_SIZE = 30
DEFAULT_ABSOLUTE_TOLERANCE = 1e-6
DEFAULT_RELATIVE_TOLERANCE = 0


# A bit array to turn on debugging information if code was compile with
# "DEBUG = yes" in the Makefile
TRACEFLAG = 0

#  LocalWords:  al Mmin Mopt Hendriks Niklas Enquist PNAS Drenner Mazumder da
#  LocalWords:  aggressivities otherwebs sqrt Inspect's variabilities DPF Zc
#  LocalWords:  Pigolotti PRL runtime txt dat HUP SortedMatrix SortedVector pre
#  LocalWords:  Makefile TRACEFLAG
