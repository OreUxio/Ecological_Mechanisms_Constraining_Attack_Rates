legend=c(expression(a[i]==10^-5.5),expression(a[i]==10^-4.75),expression(a[i]==10^-4),
"Deconstructed model","Full model"),
col=c(colz[3],colz[2],colz[1],"black","black"),lty=c(1,1,1,1,2),bty="n")
}
dev.off()},silent=T)
points_to_plot<-50
cut_of<--10
comm_cex_lab<-1.3
{
par(mfrow=c(2,2))
par(mar=c(0,4.5,4,0))
bww<-1
blue_red<-colorRampPalette(c("blue", "red"))
colz<-blue_red(3)
maxi<-max(with(all_gran_table_com,lty="dashed",
-density(log10(A2_com),bw=1.5)$x))
mini<-min(with(all_gran_table_com,lty="dashed",
-density(log10(A2_com),bw=1)$x))
yrange<-range(log10(density(log10(all_gran_table_com$ine_com))$y))
yrange<-c(yrange[1]*0.25,yrange[2]*0.25)
all_gran_table_com$l10_agg <- log10(exp(all_gran_table_com$l_agg))
cut_offf<-0
cur<-all_gran_table_com[which(all_gran_table_com$agg<agg_1),]
cur_dens<-data.frame(density(log10(cur$ine_com),bw=bww)$x);colnames(cur_dens)<-"x"
cur_dens$y<-density(log10(cur$ine_com),bw=bww)$y
cur_dens[which(cur_dens$x<0),]$y<-exp(cut_of)
with(cur_dens,plot(x,log10(y),col=colz[1],type="l",ylim=yrange,yaxs="i",xaxs="i",
main= "",cex.axis=1.2,cex.lab=1.2,#signif(c(mean(log10(ine_com)),var(log10(ine_com))),2),
xlab="",xlim=c(mini,maxi),xaxt="n",ylab=expression(log[10](Density))))
mtext("(a)",side=3,line=-2,adj=0,cex=comm_cex_lab)
axis(3,cex.axis=1.2,cex.lab=1.2,at=c(-4,-2,0,2,4,6,8))
cur<-all_gran_table_com[which(all_gran_table_com$agg>agg_1 &
all_gran_table_com$agg<agg_2),]
cur_dens<-data.frame(density(log10(cur$ine_com),bw=bww)$x);colnames(cur_dens)<-"x"
cur_dens$y<-density(log10(cur$ine_com),bw=bww)$y
cur_dens[which(cur_dens$x<0),]$y<-exp(cut_of)
with(cur_dens,lines(x,log10(y),col=colz[2],xlim=c(mini,maxi)))
cur<-all_gran_table_com[which(all_gran_table_com$agg>agg_2 &
all_gran_table_com$agg<agg_3),]
cur_dens<-data.frame(density(log10(cur$ine_com),bw=bww)$x);colnames(cur_dens)<-"x"
cur_dens$y<-density(log10(cur$ine_com),bw=bww)$y
cur_dens[which(cur_dens$x<0),]$y<-exp(cut_of)
with(cur_dens,lines(x,log10(y),col=colz[3],xlim=c(mini,maxi)))
# cur<-all_gran_table_com[which(all_gran_table_com$l_agg>(range(plot_x)[1]+cc*3) &
#                                 all_gran_table_com$l_agg<(range(plot_x)[1]+cc*4)),]
# cur_dens<-data.frame(density(log10(cur$ine_com),bw=bww)$x);colnames(cur_dens)<-"x"
# cur_dens$y<-density(log10(cur$ine_com),bw=bww)$y
# cur_dens[which(cur_dens$x<0),]$y<-exp(cut_of)
# with(cur_dens,lines(x,log10(y),col=colz[4],xlim=c(mini,maxi)))
mtext(text = expression(log[10](C)-log[10](D)-log[10](A)+log[10](B)),
side = 3,line = 2,cex=0.75)
par(mar=c(0,0,4,4))
cut_offf<-0
cur<-all_gran_table_com[which(all_gran_table_com$agg<agg_1),]
cur_dens<-density(log10(cur$A1_com-1),bw=bww)
with(cur_dens,plot(x,log10(y),col=colz[1],type="l",ylim=yrange,yaxs="i",xaxs="i",
main= "",cex.axis=1.2,cex.lab=1.2,#signif(c(mean(log10(A1_com-1)),var(log10(A1_com-1))),2),
xlab="",xlim=c(mini,maxi),xaxt="n",yaxt="n"))
mtext("(b)",side=3,line=-2,adj=0,cex=comm_cex_lab)
axis(3,cex.axis=1.2,cex.lab=1.2)
cur<-all_gran_table_com[which(all_gran_table_com$agg>agg_1 &
all_gran_table_com$agg<agg_2),]
cur_dens<-density(log10(cur$A1_com-1),bw=bww)
with(cur_dens,lines(x,log10(y),col=colz[2],xlim=c(mini,maxi)))
cur<-all_gran_table_com[which(all_gran_table_com$agg>agg_2 &
all_gran_table_com$agg<agg_3),]
cur_dens<-density(log10(cur$A1_com-1),bw=bww)
with(cur_dens,lines(x,log10(y),col=colz[3],xlim=c(mini,maxi)))
# cur<-all_gran_table_com[which(all_gran_table_com$l_agg>(range(plot_x)[1]+cc*3) &
#                                 all_gran_table_com$l_agg<(range(plot_x)[1]+cc*4)),]
# cur_dens<-density(log10(cur$A1_com-1),bw=bww)
# with(cur_dens,lines(x,log10(y),col=colz[4],xlim=c(mini,maxi)))
axis(4,cex.axis=1.2,cex.lab=1.2)
mtext(text = expression(log[10](C)),
side = 3,line = 2,cex=1)
par(mar=c(4,4.5,0,0))
cut_offf<-0
cur<-all_gran_table_com[which(all_gran_table_com$agg<agg_1),]
cur_dens<-density(-log10(cur$A2_com),bw=bww)
with(cur_dens,plot(x,log10(y),col=colz[1],type="l",ylim=yrange,yaxs="i",xaxs="i",yaxt="n",xaxt="n",
main= "",cex.axis=1.2,cex.lab=1.2,#signif(c(mean(log10(A2_com)),var(log10(A2_com))),2),
xlab=expression(-log[10](D)),xlim=c(mini,maxi),ylab=expression(log[10](Density)),yaxt="n"))
mtext("(c)",side=3,line=-2,adj=0,cex=comm_cex_lab)
axis(2,cex.axis=1.2,cex.lab=1.2,at=c(-3.25,-2.25,-1.25))
axis(1,cex.axis=1.2,cex.lab=1.2,at=c(-4,-2,0,2,4,6,8))
cur<-all_gran_table_com[which(all_gran_table_com$agg>agg_1 &
all_gran_table_com$agg<agg_2),]
cur_dens<-density(-log10(cur$A2_com),bw=bww)
with(cur_dens,lines(x,log10(y),col=colz[2],xlim=c(mini,maxi)))
cur<-all_gran_table_com[which(all_gran_table_com$agg>agg_2 &
all_gran_table_com$agg<agg_3),]
cur_dens<-density(-log10(cur$A2_com),bw=bww)
with(cur_dens,lines(x,log10(y),col=colz[3],xlim=c(mini,maxi)))
# cur<-all_gran_table_com[which(all_gran_table_com$l_agg>(range(plot_x)[1]+cc*3) &
#                                 all_gran_table_com$l_agg<(range(plot_x)[1]+cc*4)),]
# cur_dens<-density(-log10(cur$A2_com),bw=bww)
# with(cur_dens,lines(x,log10(y),col=colz[4],xlim=c(mini,maxi)))
blue_red<-colorRampPalette(c("blue", "red"))
# colz<-blue_red(3)
par(mar=c(4,0,0,4))
maxi<-max(links_1_c_mm[1],links_2_c_mm[1],links_3_c_mm[1])
mini<-min(log10(2-links_1_DD_b_mm),log10(2-links_2_DD_b_mm),log10(2-links_3_DD_b_mm))
number_adds<-length(links_1_c_mm)
minnn<-which.min(c(agg_1,agg_2,agg_3))
maxxx<-which.max(c(agg_1,agg_2,agg_3))
sample_n<-100
plot(log10(1:number_adds),links_1_c_mm,col=colz[1],cex=0.1,type="l",cex.axis=1.2,cex.lab=1.2,xaxs="i",yaxs="i",
ylim=c(-1,1.5),xlab="Number of potential serial extinctions",ylab="",yaxt="n",xaxt="n")
mtext("(d)",side=3,line=-2,adj=0.1,cex=comm_cex_lab)
# abline(h=log10(1-links_1_DD_b_mm)[1],cex=0.1,col=colz[1],lty=3)
axis(4,cex.axis=1.2,cex.lab=1.2,at=c(0,1,2,3))
axis(1,cex.axis=1.2,cex.lab=1.2,at=log10(c(1,2,5,10,50,100,250)),labels=c("Invasion",1,5,10,50,100,250))
mtext(text = expression(log[10](C)),
side = 4,line = 2.5,cex=1)
lines(log10(1:number_adds),links_2_c_mm,cex=0.1,col=colz[2],type="l")
# abline(h=log10(1-links_2_DD_b_mm)[1],cex=0.1,col=colz[2],lty=3)
lines(log10(1:number_adds),links_3_c_mm,cex=0.1,type="l",col=colz[3])
# abline(h=log10(1-links_3_DD_b_mm)[1],cex=0.1,col=colz[3],lty=3)
lines(log10(1:number_adds),links_1_c_mmm,col=colz[1],lty=2)
lines(log10(1:number_adds),links_2_c_mmm,cex=0.1,col=colz[2],type="l",lty=2)
lines(log10(1:number_adds),links_3_c_mmm,cex=0.1,type="l",col=colz[3],lty=2)
# legend("topright",legend=c("High aggressiveness","Low aggressiveness","Deconstructed model","Full model"),
#        col=c("red","blue","black","black"),lty=c(1,1,1,2),bty="n")
legend("topright",
legend=c(expression(a[i]==10^-5.5),expression(a[i]==10^-4.75),expression(a[i]==10^-4),
"Deconstructed model","Full model"),
col=c(colz[3],colz[2],colz[1],"black","black"),lty=c(1,1,1,1,2),bty="n")
}
pdf("../Images/variation.pdf",width=8*1.5,height=5.5*1.5)
print("always run this twice for some reason")
colz_colour_blind<-brewer.pal(10, "Dark2")
points_to_plot<-40
sample_n<-10
randd<-105#110
thik<-2
lab_size<-comm_cexx
point_displace<-1.5
opac_points<-0.3
opac_random<-1
mean_l_type<-1
random_l_type<-5
col_D<-colz_colour_blind[1]
col_C<-colz_colour_blind[2]
col_AB<-colz_colour_blind[3]
col_ine<-colz_colour_blind[4]
col_AB_D<-colz_colour_blind[5]
legend_size<-2
layout.matrix <- matrix(c(1, 2, 3, 4,5,3,6,6,7), nrow = 3, ncol = 3,byrow = T)
layout(mat = layout.matrix,widths = c(2,2,1.5),height=c(3.5,3.5,0.75)) # Widths of the two columns
sample_pp<-unique(round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))
sample_pp_diff<-diff(sample_pp)/4
col_AB_D<-colz_colour_blind[8]
plot_until<- 200
axis_lab<-c(1,10,100)
cex.pp=0.4
{
layout.matrix <- matrix(c(1, 2, 3, 4,5,3,6,6,7), nrow = 3, ncol = 3,byrow = T)
layout(mat = layout.matrix,widths = c(2,2,1.5),height=c(3.5,3.5,0.75)) # Widths of the two columns
divv<-20
{
par(mar=c(0,4,4,0))
number_adds<-dim(links_3_cc2)[1]
whoo<-sample(1:dim(links_3_cc_2)[2],sample_n)
plot(log10(rep(1.2,sample_n)),-log10((links_3_cc_2[1,whoo]-1)/links_3_cc2_2[1,whoo]),xaxs="i",
col=alpha("white",opac_points),cex=cex.pp, #
ylim=c(-1,4),xlim=c(0,log10(plot_until)),yaxt="n",
xaxt="n",ylab="",xlab="",main=expression(log[10](a[i])==-4.25),cex.main=comm_cexx) #xlab=expression(log[10](Number~of~resource~additions))
axis(2,ylab="",at=c(0,1,2,3,4,5),cex.axis=lab_size,cex.lab=lab_size)
for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
points(log10(rep(i,sample_n)),-log10((links_3_cc_2[i,whoo]-1)/links_3_cc2_2[i,whoo]),col=alpha("white",opac_points),cex=cex.pp)
}
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),lty=mean_l_type,
-links_3_AB_m[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],
cex=0.1,col=col_C,lwd=thik)
# lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),
#       -log10(links_3_AB[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]),
#       col=alpha(col_C,opac_random),cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
-log10(links_3_AB[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]),
col=alpha(col_C,opac_random),cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
points(log10(rep(1.2,sample_n))*0.66,-log10(links_3_cc2[1,whoo]),col=alpha("white",opac_points),cex=cex.pp,
ylim=c(-1,5),xlim=c(0,2.5),xlab=expression(log[10](Number~of~resource~additions)))
for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
points(log10(rep(i,sample_n)),-log10(links_3_cc2[i,whoo]),col=alpha("white",opac_points),cex=cex.pp)
}
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),lty=mean_l_type,
-links_3_c2_mm[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],
cex=0.1,col=col_D,lwd=thik)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
-log10(links_3_cc2[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]),
col=alpha(col_D,opac_random),cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
# abline(h=-log10(median(links_3_cc2)))
points(log10(rep(1.2,sample_n))*point_displace,log10(links_3_cc[1,whoo]-1),col=alpha("white",opac_points),cex=cex.pp)
for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
points(log10(rep(i,sample_n)),log10(links_3_cc[i,whoo]-1),col=alpha("white",opac_points),cex=cex.pp)
}
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),col=alpha(col_AB,opac_random),
log10(links_3_cc[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]-0.5),
cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
lines(log10(c(1.2,2:number_adds)),links_3_c_mm,cex=0.1,lwd=thik,lty=mean_l_type,col=col_AB)
# abline(h=log10(median(links_3_cc-1)))
}
mtext("(a)",side=1,line=-2,adj=0,cex=comm_cex_lab)
{
# par(mfrow=c(2,2))
par(mar=c(0,0,4,4))
number_adds<-dim(links_1_cc2)[1]
plot(log10(rep(1.2,sample_n)),-log10((links_1_cc_2[1,whoo]-1)/links_1_cc2_2[1,whoo]),col=alpha("white",opac_points),cex=cex.pp,xaxs="i",
ylim=c(-1,4),xlim=c(0,log10(plot_until)),yaxt="n",xaxt="n",ylab="",xlab="",
main=expression(log[10](a[i])==-5.25),cex.main=comm_cexx) #xlab=expression(log[10](Number~of~resource~additions))
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),-log10((links_1_cc_2[i,whoo]-1)/links_1_cc2_2[i,whoo]),col=alpha(col_C,opac_points),cex=cex.pp)
# }
#
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),
-links_1_AB_m[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],lty=mean_l_type,
cex=0.1,col=col_C,lwd=thik)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
-log10(links_1_AB[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]),
col=alpha(col_C,opac_random),cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
# abline(h=-log10(median((links_1_cc_2[1,]-1)/links_1_cc2_2[1,])))
# points(log10(rep(1.2,sample_n))*0.66,-log10(links_1_cc2[1,whoo]),col=alpha(col_D,opac_points),cex=cex.pp,
#        ylim=c(-1,5),xlim=c(0,2.5),xlab=expression(log[10](Number~of~resource~additions)))
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),
#          -log10(links_1_cc2[i,whoo]),col=alpha(col_D,opac_points),cex=cex.pp)
# }
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),lty=mean_l_type,
-links_1_c2_mm[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],lwd=thik,
cex=0.1,col=col_D)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
-log10(links_1_cc2[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]),
col=alpha(col_D,opac_random),cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
# abline(h=-log10(median(links_1_cc2)))
# points(log10(rep(1.2,sample_n))*point_displace,log10(links_1_cc[1,whoo]-1),col=alpha(col_AB,opac_points),cex=cex.pp)
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),log10(links_1_cc[1,whoo]-1),col=alpha(col_AB,opac_points),cex=cex.pp)
# }
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
log10(links_1_cc[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]-0.5),
col=alpha(col_AB,opac_random),cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
lines(log10(c(1.2,2:number_adds)),links_1_c_mm,cex=0.1,col=col_AB,lwd=thik,lty=mean_l_type)
# abline(h=log10(median(links_1_cc-1)))
}
mtext("(b)",side=1,line=-2,adj=0,cex=comm_cex_lab)
plot.new()
par(mar=c(0,0,0,0))
legend("center",legend=c("Mean","","Random Consumer","","Sampled Distribution","",expression(log[10](C/D)-log[10](A/B)),
"",expression(log[10](C)),"",expression(-log[10](D)),"",expression(log[10](A/B)),"",expression(log[10](AD/B)),
"","Extinction threshold"),
col=c("black",NA,"black",NA,"black",NA,col_ine,NA,col_AB,NA,col_D,NA,col_C,NA,col_AB_D,NA,"black"),
pch=c(NA,NA,NA,NA,1,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA),lty=c(mean_l_type,NA,random_l_type,NA,NA,NA,1,NA,1,NA,1,NA,1,NA,1,NA,4),bty="n",cex=legend_size)
{
par(mar=c(4,4,0,0))
plott<-log10(links_3_ine)[,whoo]
plot(log10(rep(1.2,sample_n)),plott[1,],col=alpha("white",opac_points),cex=cex.pp,xlim=c(0,log10(plot_until)),ylim=c(-1,5),xaxt="n",xaxs="i",xaxt="n",ylab="",xlab="",
lwd=thik,cex.axis=lab_size,cex.lab=lab_size)
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),type="l",
links_3_AB_D_m[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],lty=mean_l_type,
cex=0.1,col=col_AB_D,lwd=thik)
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),plott[i,],col=alpha(col_ine,opac_points),cex=cex.pp)
# }
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),
links_3_ine_m[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],lty=mean_l_type,
cex=0.1,col=col_ine,lwd=thik)
abline(h=0,lty=4)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
log10(links_3_ine[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]+0.5),
cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",col=alpha(col_ine,opac_random))
par(mar=c(4,0,0,4))
axis(1,cex.axis=lab_size,cex.lab=lab_size,at=log10(axis_lab),labels=axis_lab)
plottt<-data.frame(log10(links_3_AB_D)[,whoo])
# points(log10(rep(1.2,sample_n)),plottt[1,],col=alpha(col_AB_D,opac_points),cex=cex.pp,xlim=c(0,2.5),ylim=c(-1,5),xaxt="n",xaxs="i",xaxt="n",ylab="",xlab="",
#      lwd=thik,cex.axis=lab_size,cex.lab=lab_size)
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),plottt[i,],col=alpha(col_AB_D,opac_points),cex=cex.pp)
# }
abline(h=0,lty=4)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
log10(links_3_AB_D[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]+0.5),
cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",col=alpha(col_AB_D,opac_random))
par(mar=c(4,0,0,4))
axis(1,cex.axis=lab_size,cex.lab=lab_size,at=log10(axis_lab),labels=axis_lab)
mtext("(c)",side=1,line=-2,adj=0,cex=comm_cex_lab)
plott<-log10(links_1_ine)[,whoo]
plot(log10(rep(1.2,sample_n)),plott[1,],col=alpha("white",opac_points),cex=cex.pp,xlim=c(0,log10(plot_until)),ylim=c(-1,5),xaxt="n",xaxs="i",xaxt="n",ylab="",xlab="",
lwd=thik,cex.axis=lab_size,cex.lab=lab_size,yaxt="n")
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),plott[i,],col=alpha(col_ine,opac_points),cex=cex.pp)
# }
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),
links_1_ine_m[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],lty=mean_l_type,
cex=0.1,col=col_ine,lwd=thik)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),col=alpha(col_ine,opac_random),
log10(links_1_ine[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]),
cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
abline(h=0,lty=4)
axis(1,cex.axis=lab_size,cex.lab=lab_size,at=log10(axis_lab),labels=axis_lab)
plott<-log10(links_1_AB_D)[,whoo]
# points(log10(rep(1.2,sample_n)),plott[1,],col=alpha("white",opac_points),cex=cex.pp,xlim=c(0,2.5),ylim=c(-1,5),xaxt="n",xaxs="i",xaxt="n",ylab="",xlab="",
#        lwd=thik,cex.axis=lab_size,cex.lab=lab_size)
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),plott[i,],col=alpha("white",opac_points),cex=cex.pp)
# }
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),
links_1_AB_D_m[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],lty=mean_l_type,
cex=0.1,col=col_AB_D,lwd=thik)
abline(h=0,lty=4)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
log10(links_1_AB_D[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]+0.5),
cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",col=alpha(col_AB_D,opac_random))
mtext("(d)",side=1,line=-2,adj=0,cex=comm_cex_lab)
}
par(mar=c(0,0,0,0))
plot.new()
mtext("Number of resource additions",side=3,line=-1,adj=0.5,cex=mtext_cex)
}
dev.off()
getwd()
setwd("/home/ore/Documents/Academic/Ecological_Mechanisms_Constraining_Attack_Rates/all/Code/")
pdf("../Images/variation.pdf",width=8*1.5,height=5.5*1.5)
print("always run this twice for some reason")
colz_colour_blind<-brewer.pal(10, "Dark2")
points_to_plot<-40
sample_n<-10
randd<-105#110
thik<-2
lab_size<-comm_cexx
point_displace<-1.5
opac_points<-0.3
opac_random<-1
mean_l_type<-1
random_l_type<-5
col_D<-colz_colour_blind[1]
col_C<-colz_colour_blind[2]
col_AB<-colz_colour_blind[3]
col_ine<-colz_colour_blind[4]
col_AB_D<-colz_colour_blind[5]
legend_size<-2
layout.matrix <- matrix(c(1, 2, 3, 4,5,3,6,6,7), nrow = 3, ncol = 3,byrow = T)
layout(mat = layout.matrix,widths = c(2,2,1.5),height=c(3.5,3.5,0.75)) # Widths of the two columns
sample_pp<-unique(round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))
sample_pp_diff<-diff(sample_pp)/4
col_AB_D<-colz_colour_blind[8]
plot_until<- 200
axis_lab<-c(1,10,100)
cex.pp=0.4
{
layout.matrix <- matrix(c(1, 2, 3, 4,5,3,6,6,7), nrow = 3, ncol = 3,byrow = T)
layout(mat = layout.matrix,widths = c(2,2,1.5),height=c(3.5,3.5,0.75)) # Widths of the two columns
divv<-20
{
par(mar=c(0,4,4,0))
number_adds<-dim(links_3_cc2)[1]
whoo<-sample(1:dim(links_3_cc_2)[2],sample_n)
plot(log10(rep(1.2,sample_n)),-log10((links_3_cc_2[1,whoo]-1)/links_3_cc2_2[1,whoo]),xaxs="i",
col=alpha("white",opac_points),cex=cex.pp, #
ylim=c(-1,4),xlim=c(0,log10(plot_until)),yaxt="n",
xaxt="n",ylab="",xlab="",main=expression(log[10](a[i])==-4.25),cex.main=comm_cexx) #xlab=expression(log[10](Number~of~resource~additions))
axis(2,ylab="",at=c(0,1,2,3,4,5),cex.axis=lab_size,cex.lab=lab_size)
for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
points(log10(rep(i,sample_n)),-log10((links_3_cc_2[i,whoo]-1)/links_3_cc2_2[i,whoo]),col=alpha("white",opac_points),cex=cex.pp)
}
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),lty=mean_l_type,
-links_3_AB_m[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],
cex=0.1,col=col_C,lwd=thik)
# lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),
#       -log10(links_3_AB[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]),
#       col=alpha(col_C,opac_random),cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
-log10(links_3_AB[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]),
col=alpha(col_C,opac_random),cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
points(log10(rep(1.2,sample_n))*0.66,-log10(links_3_cc2[1,whoo]),col=alpha("white",opac_points),cex=cex.pp,
ylim=c(-1,5),xlim=c(0,2.5),xlab=expression(log[10](Number~of~resource~additions)))
for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
points(log10(rep(i,sample_n)),-log10(links_3_cc2[i,whoo]),col=alpha("white",opac_points),cex=cex.pp)
}
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),lty=mean_l_type,
-links_3_c2_mm[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],
cex=0.1,col=col_D,lwd=thik)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
-log10(links_3_cc2[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]),
col=alpha(col_D,opac_random),cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
# abline(h=-log10(median(links_3_cc2)))
points(log10(rep(1.2,sample_n))*point_displace,log10(links_3_cc[1,whoo]-1),col=alpha("white",opac_points),cex=cex.pp)
for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
points(log10(rep(i,sample_n)),log10(links_3_cc[i,whoo]-1),col=alpha("white",opac_points),cex=cex.pp)
}
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),col=alpha(col_AB,opac_random),
log10(links_3_cc[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]-0.5),
cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
lines(log10(c(1.2,2:number_adds)),links_3_c_mm,cex=0.1,lwd=thik,lty=mean_l_type,col=col_AB)
# abline(h=log10(median(links_3_cc-1)))
}
mtext("(a)",side=1,line=-2,adj=0,cex=comm_cex_lab)
{
# par(mfrow=c(2,2))
par(mar=c(0,0,4,4))
number_adds<-dim(links_1_cc2)[1]
plot(log10(rep(1.2,sample_n)),-log10((links_1_cc_2[1,whoo]-1)/links_1_cc2_2[1,whoo]),col=alpha("white",opac_points),cex=cex.pp,xaxs="i",
ylim=c(-1,4),xlim=c(0,log10(plot_until)),yaxt="n",xaxt="n",ylab="",xlab="",
main=expression(log[10](a[i])==-5.25),cex.main=comm_cexx) #xlab=expression(log[10](Number~of~resource~additions))
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),-log10((links_1_cc_2[i,whoo]-1)/links_1_cc2_2[i,whoo]),col=alpha(col_C,opac_points),cex=cex.pp)
# }
#
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),
-links_1_AB_m[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],lty=mean_l_type,
cex=0.1,col=col_C,lwd=thik)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
-log10(links_1_AB[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]),
col=alpha(col_C,opac_random),cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
# abline(h=-log10(median((links_1_cc_2[1,]-1)/links_1_cc2_2[1,])))
# points(log10(rep(1.2,sample_n))*0.66,-log10(links_1_cc2[1,whoo]),col=alpha(col_D,opac_points),cex=cex.pp,
#        ylim=c(-1,5),xlim=c(0,2.5),xlab=expression(log[10](Number~of~resource~additions)))
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),
#          -log10(links_1_cc2[i,whoo]),col=alpha(col_D,opac_points),cex=cex.pp)
# }
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),lty=mean_l_type,
-links_1_c2_mm[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],lwd=thik,
cex=0.1,col=col_D)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
-log10(links_1_cc2[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]),
col=alpha(col_D,opac_random),cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
# abline(h=-log10(median(links_1_cc2)))
# points(log10(rep(1.2,sample_n))*point_displace,log10(links_1_cc[1,whoo]-1),col=alpha(col_AB,opac_points),cex=cex.pp)
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),log10(links_1_cc[1,whoo]-1),col=alpha(col_AB,opac_points),cex=cex.pp)
# }
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
log10(links_1_cc[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]-0.5),
col=alpha(col_AB,opac_random),cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
lines(log10(c(1.2,2:number_adds)),links_1_c_mm,cex=0.1,col=col_AB,lwd=thik,lty=mean_l_type)
# abline(h=log10(median(links_1_cc-1)))
}
mtext("(b)",side=1,line=-2,adj=0,cex=comm_cex_lab)
plot.new()
par(mar=c(0,0,0,0))
legend("center",legend=c("Mean","","Random Consumer","","Sampled Distribution","",expression(log[10](C/D)-log[10](A/B)),
"",expression(log[10](C)),"",expression(-log[10](D)),"",expression(log[10](A/B)),"",expression(log[10](AD/B)),
"","Extinction threshold"),
col=c("black",NA,"black",NA,"black",NA,col_ine,NA,col_AB,NA,col_D,NA,col_C,NA,col_AB_D,NA,"black"),
pch=c(NA,NA,NA,NA,1,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA),lty=c(mean_l_type,NA,random_l_type,NA,NA,NA,1,NA,1,NA,1,NA,1,NA,1,NA,4),bty="n",cex=legend_size)
{
par(mar=c(4,4,0,0))
plott<-log10(links_3_ine)[,whoo]
plot(log10(rep(1.2,sample_n)),plott[1,],col=alpha("white",opac_points),cex=cex.pp,xlim=c(0,log10(plot_until)),ylim=c(-1,5),xaxt="n",xaxs="i",xaxt="n",ylab="",xlab="",
lwd=thik,cex.axis=lab_size,cex.lab=lab_size)
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),type="l",
links_3_AB_D_m[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],lty=mean_l_type,
cex=0.1,col=col_AB_D,lwd=thik)
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),plott[i,],col=alpha(col_ine,opac_points),cex=cex.pp)
# }
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),
links_3_ine_m[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],lty=mean_l_type,
cex=0.1,col=col_ine,lwd=thik)
abline(h=0,lty=4)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
log10(links_3_ine[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]+0.5),
cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",col=alpha(col_ine,opac_random))
par(mar=c(4,0,0,4))
axis(1,cex.axis=lab_size,cex.lab=lab_size,at=log10(axis_lab),labels=axis_lab)
plottt<-data.frame(log10(links_3_AB_D)[,whoo])
# points(log10(rep(1.2,sample_n)),plottt[1,],col=alpha(col_AB_D,opac_points),cex=cex.pp,xlim=c(0,2.5),ylim=c(-1,5),xaxt="n",xaxs="i",xaxt="n",ylab="",xlab="",
#      lwd=thik,cex.axis=lab_size,cex.lab=lab_size)
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),plottt[i,],col=alpha(col_AB_D,opac_points),cex=cex.pp)
# }
abline(h=0,lty=4)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
log10(links_3_AB_D[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]+0.5),
cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",col=alpha(col_AB_D,opac_random))
par(mar=c(4,0,0,4))
axis(1,cex.axis=lab_size,cex.lab=lab_size,at=log10(axis_lab),labels=axis_lab)
mtext("(c)",side=1,line=-2,adj=0,cex=comm_cex_lab)
plott<-log10(links_1_ine)[,whoo]
plot(log10(rep(1.2,sample_n)),plott[1,],col=alpha("white",opac_points),cex=cex.pp,xlim=c(0,log10(plot_until)),ylim=c(-1,5),xaxt="n",xaxs="i",xaxt="n",ylab="",xlab="",
lwd=thik,cex.axis=lab_size,cex.lab=lab_size,yaxt="n")
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),plott[i,],col=alpha(col_ine,opac_points),cex=cex.pp)
# }
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),
links_1_ine_m[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],lty=mean_l_type,
cex=0.1,col=col_ine,lwd=thik)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),col=alpha(col_ine,opac_random),
log10(links_1_ine[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]),
cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",yaxt="n")
abline(h=0,lty=4)
axis(1,cex.axis=lab_size,cex.lab=lab_size,at=log10(axis_lab),labels=axis_lab)
plott<-log10(links_1_AB_D)[,whoo]
# points(log10(rep(1.2,sample_n)),plott[1,],col=alpha("white",opac_points),cex=cex.pp,xlim=c(0,2.5),ylim=c(-1,5),xaxt="n",xaxs="i",xaxt="n",ylab="",xlab="",
#        lwd=thik,cex.axis=lab_size,cex.lab=lab_size)
# for (i in c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))){
#   points(log10(rep(i,sample_n)),plott[i,],col=alpha("white",opac_points),cex=cex.pp)
# }
lines(log10(c(1.2,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))),
links_1_AB_D_m[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot)))],lty=mean_l_type,
cex=0.1,col=col_AB_D,lwd=thik)
abline(h=0,lty=4)
lines(log10(c(1.2,round(seq(2,number_adds/50,length.out=points_to_plot)))),
log10(links_1_AB_D[c(1,round(10^seq(log10(2),log10(number_adds),length.out=points_to_plot))),randd]+0.5),
cex=0.1,lty=random_l_type,xlab=expression(log[10](Number~of~resource~additions)),ylab="",col=alpha(col_AB_D,opac_random))
mtext("(d)",side=1,line=-2,adj=0,cex=comm_cex_lab)
}
par(mar=c(0,0,0,0))
plot.new()
mtext("Number of resource additions",side=3,line=-1,adj=0.5,cex=mtext_cex)
}
dev.off()
